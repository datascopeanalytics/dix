#!/usr/bin/env python
# -*- coding: utf-8 -*-
# -*- mode: python -*-

"""Call me Ishmael. Dix is a utility for quantifying the size of
plaintext data using a revolutionary metric --- Moby-Dick --- the
number of words in the classic American novel, Moby Dick.
"""

import optparse
import subprocess
import platform
import random
import sys

# setup the option parser
parser = optparse.OptionParser(
    usage="%prog [options] [filename]",
    description=__doc__,
)
parser.add_option(
    '-p', '--precision', 
    dest="precision", 
    default=4,
    type="int",
    help="for precision measurement, set the number of decimal places to display"
)
opts, args = parser.parse_args()

# filename is specified
if args:
    pipe = subprocess.Popen(
        ["wc", "-w", args[0]], stdout=subprocess.PIPE, stdin=sys.stdin,
    )
    big_words = float(pipe.stdout.read().split()[0])

# filename isn't specified, read from stdin instead
else:
    pipe = subprocess.Popen(
        ["wc", "-w"], stdout=subprocess.PIPE, stdin=sys.stdin,
    )
    out, err = pipe.communicate()
    big_words = float(out.strip())

# use the whale unicode character if the plotform supports emoji
unit = " Moby-Dicks"
if "Darwin" in platform.platform():
    ver = platform.mac_ver()[0]
    point = ver.split('.')[0:2]
    # only print emoji if they have lion or above
    if int(point[1]) >= 7:
        unit = u" 🐳"

# print out the number of moby dicks
# MD = 209117
number_template = u"{0:." + unicode(opts.precision) + u"f}"
print(number_template.format(big_words / 209117) + unit)

# smack talk 
message = random.choice((
    "Whoa, that's a lot of Moby Dick's!",
    "You call that BIG data?! Please...",
    "Yo' data so big, it probably won't even fit in memory!",
))
print(message.rjust(79))
