#!/usr/bin/env python
# -*- coding: utf-8 -*-
# -*- mode: python -*-

"""Call me Ishmael. Dix is a utility for quantifying large amounts of
plaintext data using a revolutionary metric: Moby-Dicks.
"""

import optparse
import subprocess
import platform
import random


# setup the option parser
parser = optparse.OptionParser(description=__doc__)
parser.add_option('-p', '--precision', 
                  dest="precision", 
                  default=4,
                  type="int",
                  help="Sets the number of decimal places to display")
parser.add_option('--tiny', 
                  dest="tiny", 
                  default=False,
                  action="store_true",
                  help="Use the Cozy Classics: Moby Dick childrens' board book as a base, to make yourself feel better")


opts, args = parser.parse_args()

big_data = args[0]

# calculate word count

pipe = subprocess.Popen(["wc", "-w", big_data], stdout=subprocess.PIPE)
big_words = float(pipe.stdout.read().split()[0])

# print out the number of moby dicks

# only print emoji if they have OS X 10.7 (Lion) or above
number_template = u"{0:." + unicode(opts.precision) + u"f}"
if "Darwin" in platform.platform():
    ver = platform.mac_ver()[0]
    point = ver.split('.')[0:2]

    if int(point[1]) >= 7:
        if opts.tiny:
            unit = u" 🐳"
        else:
            unit = u" 🐋"

    else:
        unit = " Moby-Dicks"
else:
    unit = " Moby-Dicks"

if opts.tiny:
    # http://www.amazon.com/Cozy-Classics-Moby-Holman-Wang/dp/1927018110
    base = 12
else:
    base = 209117

print(number_template.format(big_words / base) + unit)

message = random.choice((
    "Whoa, that's a lot of Moby Dick's!",
    "You call that BIG data?! Please...",
    "Yo' data so big, it probably won't even fit in memory!",
))
print(message.rjust(79))
